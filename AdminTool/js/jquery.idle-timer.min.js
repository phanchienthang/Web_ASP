(function(n){n.idleTimer=function(t,i,r){r=n.extend({startImmediately:!0,idle:!1,enabled:!0,timeout:3e4,events:"mousemove keydown DOMMouseScroll mousewheel mousedown touchstart touchmove"},r);i=i||document;var f=function(t){var u,e,o;if(typeof t=="number"&&(t=undefined),u=n.data(t||i,"idleTimerObj"),u.idle=!u.idle,e=+new Date-u.olddate,u.olddate=+new Date,u.idle&&e<r.timeout){u.idle=!1;clearTimeout(n.idleTimer.tId);r.enabled&&(n.idleTimer.tId=setTimeout(f,r.timeout));return}o=jQuery.Event(n.data(i,"idleTimer",u.idle?"idle":"active")+".idleTimer");n(i).trigger(o)},e=function(t){var i=n.data(t,"idleTimerObj")||{};i.enabled=!1;clearTimeout(i.tId);n(t).off(".idleTimer")},o=function(){var t=n.data(this,"idleTimerObj");clearTimeout(t.tId);t.enabled&&(t.idle&&f(this),t.tId=setTimeout(f,t.timeout))},u=n.data(i,"idleTimerObj")||{};if(u.olddate=u.olddate||+new Date,typeof t=="number")r.timeout=t;else{if(t==="destroy")return e(i),this;if(t==="getElapsedTime")return+new Date-u.olddate}n(i).on(n.trim((r.events+" ").split(" ").join(".idleTimer ")),o);u.idle=r.idle;u.enabled=r.enabled;u.timeout=r.timeout;r.startImmediately&&(u.tId=setTimeout(f,u.timeout));n.data(i,"idleTimer","active");n.data(i,"idleTimerObj",u)};n.fn.idleTimer=function(t,i){return i||(i={}),this[0]&&n.idleTimer(t,this[0],i),this}})(jQuery);
String.prototype.format = function () { for (var n = this, t = arguments.length; t--;) n = n.replace(new RegExp("\\{" + t + "\\}", "gm"), arguments[t]); return n }; !function (n) { n.timeoutDialog = function (t) { var i = { timeout: 1200, countdown: 60, title: "Your session is about to expire!", message: "You will be logged out in {0} seconds.", question: "Do you want to stay signed in?", keep_alive_button_text: "Yes, Keep me signed in", sign_out_button_text: "No, Sign me out", keep_alive_url: "/keep-alive", logout_url: null, logout_redirect_url: "/", restart_on_yes: !0, dialog_width: 350 }, r; n.extend(i, t); r = { init: function () { this.setupDialogTimer() }, setupDialogTimer: function () { var n = this; window.setTimeout(function () { n.setupDialog() }, (i.timeout - i.countdown) * 1e3) }, setupDialog: function () { var t = this; t.destroyDialog(); n('<div id="timeout-dialog"><p id="timeout-message">' + i.message.format('<span id="timeout-countdown">' + i.countdown + "<\/span>") + '<\/p><p id="timeout-question">' + i.question + "<\/p><\/div>").appendTo("body").dialog({ modal: !0, width: i.dialog_width, minHeight: "auto", zIndex: 1e4, closeOnEscape: !1, draggable: !1, resizable: !1, dialogClass: "timeout-dialog", title: i.title, buttons: { "keep-alive-button": { text: i.keep_alive_button_text, id: "timeout-keep-signin-btn", click: function () { t.keepAlive() } }, "sign-out-button": { text: i.sign_out_button_text, id: "timeout-sign-out-button", click: function () { t.signOut(!0) } } } }); t.startCountdown() }, destroyDialog: function () { n("#timeout-dialog").length && (n("#timeout-dialog").dialog("close"), n("#timeout-dialog").remove()) }, startCountdown: function () { var r = this, t = i.countdown; this.countdown = window.setInterval(function () { t -= 1; n("#timeout-countdown").html(t); t <= 0 && (window.clearInterval(r.countdown), r.signOut(!1)) }, 1e3) }, keepAlive: function () { var t = this; this.destroyDialog(); window.clearInterval(this.countdown); n.get(i.keep_alive_url, function (n) { n == "OK" ? i.restart_on_yes && t.setupDialogTimer() : t.signOut(!1) }) }, signOut: function (t) { var r = this; this.destroyDialog(); i.logout_url != null ? n.post(i.logout_url, function () { r.redirectLogout(t) }) : r.redirectLogout(t) }, redirectLogout: function (n) { var t = i.logout_redirect_url + "?next=" + encodeURIComponent(window.location.pathname + window.location.search); n || (t += "&timeout=t"); window.location = t } }; r.init() } }(window.jQuery);
/*
//# sourceMappingURL=jquery.idle-timer.min.js.map
*/